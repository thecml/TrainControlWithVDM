class Eurobalise
types
	public TrainState = <TRAIN_ENTER> | <TRAIN_LEAVE>;
	
instance variables
	private itl : Interlocking;
	private track: Interlocking`Track;
	
operations
	public Enter: () ==> nat1
	Enter() ==
	(
		-- notify interlocking that train has entered track
		-- and return permitted speed for the track
		itl.SetTrackState(track, <TRAIN_ENTER>);
		return track.maxSpeed;
	);
		
	public Leave: () ==> ()
	Leave() ==
	  -- notify interlocking that train has left track
		itl.SetTrackState(track, <TRAIN_LEAVE>);
		
	public GetTrack: () ==> Interlocking`Track
	GetTrack() ==
		-- get track
		return track;
			
	public Eurobalise : Interlocking * Interlocking`Track ==> Eurobalise
	Eurobalise(pitl, tr) ==
	(
		itl := pitl;
		track := tr;
	);
	
end Eurobalise