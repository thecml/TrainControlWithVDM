class Eurobalise
types
	public TrainState = <TRAIN_ENTER> | <TRAIN_LEAVE>;
	
instance variables
	private interlocking : Interlocking;
	private track: Interlocking`Track;
	
operations
	public Enter: () ==> ()
	Enter() ==
		-- notify interlocking that train has entered track
		-- and return permitted speed for the track
		(
			interlocking.SetTrackState(track, <TRAIN_ENTER>);
		);
		
	public Leave: () ==> ()
	Leave() ==
	  -- notify interlocking that train has left track
		interlocking.SetTrackState(track, <TRAIN_LEAVE>);
			
	public Eurobalise : Interlocking * Interlocking`Track ==> Eurobalise
	Eurobalise(itl, tr) ==
	atomic (
		interlocking := itl;
		track := tr;
	);
	
functions
end Eurobalise