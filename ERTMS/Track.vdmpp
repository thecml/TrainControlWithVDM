class Track
types
	public TrainState = <TRAIN_ENTER> | <TRAIN_LEAVE>;
	
instance variables
	public fromCoord : Point;
	public toCoord : Point;
	private interlocking : Interlocking;
	private description : seq of char;
	private permittedSpeed : nat;
	
operations
	public EnterTrack : () ==> ()
	EnterTrack() ==
		interlocking.SetTrackState(self, <TRAIN_ENTER>);
		
	public LeaveTrack : () ==> ()
	LeaveTrack() ==
		interlocking.SetTrackState(self, <TRAIN_LEAVE>);

	public Track : Point * Point * Interlocking * seq of char * nat ==> Track
	Track(pFromCoord, pToCoord, itl, desp, ps) ==
	(
		fromCoord := pFromCoord;
		toCoord := pToCoord;
		interlocking := itl;
		description := desp;
		permittedSpeed := ps;
	);
	
functions
		
end Track