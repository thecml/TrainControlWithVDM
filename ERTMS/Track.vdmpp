class Track is subclass of Eurobalise
types
	public TrainState = <TRAIN_ENTER> | <TRAIN_LEAVE>;
	
instance variables
	public fromCoord : Point;
	public toCoord : Point;
	private interlocking : Interlocking;
	private description : seq of char;
	private permittedSpeed : nat1;
	
operations
	public Enter: () ==> ()
	Enter() ==
		-- notify interlocking train has entered the track
		interlocking.SetTrackState(self, <TRAIN_ENTER>);
		
	public Leave: () ==> ()
	Leave() ==
	  -- notify interlocking ttrain has left the track
		interlocking.SetTrackState(self, <TRAIN_LEAVE>);
		
	public GetDescription: () ==> seq of char
	GetDescription() ==
		return description;
	
	GetPermittedSpeed: () ==> nat1
	GetPermittedSpeed() ==
		return permittedSpeed;

	public Track : Point * Point * Interlocking * seq of char * nat1 ==> Track
	Track(pFromCoord, pToCoord, itl, desp, ps) ==
	(
		fromCoord := pFromCoord;
		toCoord := pToCoord;
		interlocking := itl;
		description := desp;
		permittedSpeed := ps;
	);
	
functions

end Track