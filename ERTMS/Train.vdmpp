class Train
types
-- TODO Define types here
instance variables
	private id: nat;
	private position : nat;
	private route: Interlocking`Route;
	private radioBlockCenter : RadioBlockCenter;
	private speed : nat;
	private maxSpeed : nat;
	private isRunning : bool;
	
	inv speed <> 0 and speed <= maxSpeed and isRunning = true;
	
operations
	public Step: () ==> ()
	Step() ==
		is not yet specified;
		
	public UpdateTrack: () ==> Interlocking`Track
	UpdateTrack() ==
		is not yet specified;
		
	private Stop: () ==> ()
	Stop() ==
	(
		speed := 0;
		isRunning := false
	);
		
	private Accelerate: (nat1) ==> ()
	Accelerate(amount) ==
		if isRunning then speed := speed + amount else speed := 0; 
		
	public Train: nat * nat * Interlocking`Route *
	 RadioBlockCenter * bool ==> Train
	 Train(ident,pos,rn,rbc,running) ==
	 (
	 	id := ident;
	 	position := pos;
	  route := rn;
	  radioBlockCenter := rbc;
	  isRunning := running;
	  speed := 0;
	 	maxSpeed := 0;
	 );
			
functions
-- TODO Define functiones here
end Train