class Train
instance variables
	private startX : nat;
	private startY : nat;
	private destX : nat;
	private destY : nat;
	private route: seq of Interlocking`Track;
	private radioBlockCenter : RadioBlockCenter;
	private speed : nat;
	private maxSpeed : nat;
	private isRunning : bool;
	
	--inv speed <> 0 and speed <= maxSpeed and isRunning = true;
	
operations
	public Run: () ==> ()
	Run() ==
		is not yet specified;
		
	public UpdateTrack: () ==> Interlocking`Track
	UpdateTrack() ==
		is not yet specified;
		
	private Stop: () ==> ()
	Stop() ==
	(
		speed := 0;
		isRunning := false
	);
		
	private Accelerate: (nat1) ==> ()
	Accelerate(amount) ==
		if isRunning then speed := speed + amount else speed := 0; 
		
	public Train: seq of Interlocking`Track * RadioBlockCenter * bool ==> Train
	 Train(rn,rbc,running) ==
	 atomic (
	 	startX := (hd rn).startX;
	 	startY := (hd rn).startY;
	 	destX := rn(len rn).endX;
	 	destY := rn(len rn).endY;
	 	maxSpeed := (hd rn).maxSpeed;
	  route := rn;
	  radioBlockCenter := rbc;
	  isRunning := running;
	  speed := 0;
	 );
functions
end Train