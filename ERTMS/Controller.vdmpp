class Controller
types

instance variables
	private itl : Interlocking;
	private routes : seq of Interlocking`Route;
	
operations
	public Step:() ==> ()
	Step() ==
		SendRouteRequest();
		
	private SendRouteRequest:() ==> ()
	SendRouteRequest() ==
		-- send a random selected route into the Interlocking as a route request.
		(dcl rn : nat := MATH`rand(len routes)+1;
			if(rn in set inds routes) then
				itl.RequestRoute(routes(rn));
		)
	pre len routes > 0;
	
	public Controller : seq of Interlocking`Route * Interlocking ==> Controller
	Controller(rts, pitl) ==
	atomic (
		routes := rts;
		itl := pitl;
	);
	
end Controller