private Drive: () ==> ()
	Drive() ==
	-- Drive() performs one iteration of moving the train
	( -- continue if there is track to traverse
		if(currentTrack <= card dom route and started) then
		(
			dcl currentEb : Eurobalise := transponders(route(currentTrack));
			dcl distX : real := route(currentTrack).endX-posX;
			dcl distY : real := route(currentTrack).endY-posY;
			-- make sure we have MoA for current track
			if (movementAuths(route(currentTrack))) then (
				-- check where the train is currently
				if (posX = route(currentTrack).startX and posY = route(currentTrack).startY)
				then (
					-- enter track and drive halfway
					currentEb.Enter();
					if (distX = 0 and distY <> 0) then ( posY := posY + distY/2; )
					else if (distY = 0 and distX <> 0) then ( posX := posX + distX/2; )
					else if (distY <> 0 and distX <> 0) then
					( posY := posY + distY/2; posX := posX + distX/2; );
				) else if (posX = route(currentTrack).endX and posY = route(currentTrack).endY)
				then (
					-- leave current track, adjust speed to next track
					currentEb.Leave();
					if(currentTrack+1 < card dom route) then
					atomic (
						speed := route(currentTrack+1).maxSpeed;
						currentTrack := currentTrack+1;
					) else
						speed := 0;
				) else (
					-- we are midway. request MoA for next track, if there is such
					if (card dom route > currentTrack) then (
						if(rbc.RequestMovementAuthority(route(currentTrack+1)) = <MovementAuthorityGranted>)
						 then ( movementAuths := movementAuths ++ {route(currentTrack) |-> true}; )
					);
					-- drive the remaining way
					if (distX = 0 and distY <> 0) then ( posY := posY + distY; )
					else if (distY = 0 and distX <> 0) then ( posX := posX + distX; )
					else if (distX <> 0 and distY <> 0) then
					( posY := posY + distY; posX := posX + distX; );
				);
			) else (
				-- get MoA for current track
				if(rbc.RequestMovementAuthority(route(currentTrack)) = <MovementAuthorityGranted>)
				then (
					movementAuths := movementAuths ++ {route(currentTrack) |-> true};
					started := true;
				) else (
				-- could not get MoA. Stopping ...
					speed := 0;
				)
			)
		) else (
			-- train has reached end of route, stop
			speed := 0; started := false
		)
	);